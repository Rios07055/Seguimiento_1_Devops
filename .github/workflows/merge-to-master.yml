name: testing → master (85%+)

on:
  push:
    branches: [testing]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  ci-merge-master:
    runs-on: ubuntu-latest
    concurrency:
      group: automerge-master
      cancel-in-progress: false

    services:
      mariadb:
        image: mariadb:10.11
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: universidad
          MARIADB_USER: fastapi
          MARIADB_PASSWORD: 1234
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s --health-timeout=5s --health-retries=10

    env:
      DATABASE_URL: mysql+pymysql://fastapi:1234@127.0.0.1:3306/universidad
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps & run tests with coverage
        run: |
          pip install -r requirements.txt || true
          pip install pytest pytest-cov pymysql
          if [ -f alembic.ini ]; then alembic upgrade head || true; fi
          pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml

      - name: Read coverage.xml → pct
        id: covcalc
        run: |
          python - <<'PY'
          import os, xml.etree.ElementTree as ET
          root = ET.parse('coverage.xml').getroot()
          pct = round(float(root.get('line-rate', '0'))*100, 2)
          print("coverage %:", pct)
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"pct={pct}\n")
          PY

      - name: Merge testing → master (no-ff)
        if: ${{ fromJSON(steps.covcalc.outputs.pct) >= 85 }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git checkout master
          git merge --no-ff --no-edit origin/testing
          git push origin master

      - name: Trigger Render deploy (production)
        if: ${{ fromJSON(steps.covcalc.outputs.pct) >= 85 }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_PROD_SERVICE_ID }}
        run: |
          echo "Triggering Render deploy for service $RENDER_SERVICE_ID..."
          curl -sS -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys
