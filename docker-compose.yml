services:
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - estudiante
      - carrera
      - facultad
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"

  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG:-17}
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1234}
      POSTGRES_DB: ${POSTGRES_DB:-universidad}
      POSTGRES_USER: ${POSTGRES_USER:-fastapi}
    volumes:
      - "./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro"
    ports:
      - "${POSTGRES_HOST_PORT:-15432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -U ${POSTGRES_USER:-fastapi} -d ${POSTGRES_DB:-universidad}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  estudiante:
    build:
      context: .
      dockerfile: estudiante_service/Dockerfile
    env_file:
      - .env
      - ./estudiante_service/.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${ESTUDIANTE_PORT:-8011}:8000"
    restart: unless-stopped

  carrera:
    build:
      context: .
      dockerfile: carrera_service/Dockerfile
    env_file:
      - .env
      - ./carrera_service/.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${CARRERA_PORT:-8012}:8000"
    restart: unless-stopped

  facultad:
    build:
      context: .
      dockerfile: facultad_service/Dockerfile
    env_file:
      - .env
      - ./facultad_service/.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${FACULTAD_PORT:-8013}:8000"
    restart: unless-stopped

volumes:
  postgres_data:

